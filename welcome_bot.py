from telegram import Update, InlineKeyboardMarkup, InlineKeyboardButton
from telegram.ext import Updater, CommandHandler, CallbackContext, CallbackQueryHandler, MessageHandler, Filters

# ‚úÖ –¢–≤–æ–π —Ç–æ–∫–µ–Ω –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ–≥–æ –±–æ—Ç–∞
TOKEN = "8128088643:AAFX6vFLh8HAlcm_IxBS4DJzGdbyirQAiWc"

# ‚úÖ –¢–≤–æ–π –∫–∞–Ω–∞–ª –∏ —á–∞—Ç (–±–µ–∑ @)
CHANNEL_USERNAME = "Doroga_k_Yoga"
GROUP_USERNAME = "chatdorogakyoga"

def start(update: Update, context: CallbackContext):
    user = update.effective_user

    buttons = [
        [InlineKeyboardButton("üì¢ –ü–æ–¥–ø–∏—Å–∞—Ç—å—Å—è –Ω–∞ –∫–∞–Ω–∞–ª", url=f"https://t.me/{CHANNEL_USERNAME}")],
        [InlineKeyboardButton("üí¨ –í—Å—Ç—É–ø–∏—Ç—å –≤ —á–∞—Ç", url=f"https://t.me/{GROUP_USERNAME}")],
        [InlineKeyboardButton("‚úÖ –Ø –ø–æ–¥–ø–∏—Å–∞–ª—Å—è", callback_data="check_subs")]
    ]
    update.message.reply_text(
        f"–ü—Ä–∏–≤–µ—Ç, {user.first_name or '–¥—Ä—É–≥'}! üßò‚Äç‚ôÄÔ∏è\n\n"
        "–ü–µ—Ä–µ–¥ —Ç–µ–º –∫–∞–∫ –æ—Ç–∫—Ä—ã—Ç—å –º–µ–Ω—é, –ø–æ–∂–∞–ª—É–π—Å—Ç–∞ –ø–æ–¥–ø–∏—à–∏—Å—å:\n\n"
        "üì¢ –ù–∞ –Ω–∞—à –∫–∞–Ω–∞–ª ‚Äî —Ç–∞–º –º–Ω–æ–≥–æ –ø–æ–ª–µ–∑–Ω–æ–≥–æ\n"
        "üí¨ –ò –Ω–∞ —É—é—Ç–Ω—ã–π —á–∞—Ç ‚Äî —á—Ç–æ–±—ã –æ–±—â–∞—Ç—å—Å—è —Å –µ–¥–∏–Ω–æ–º—ã—à–ª–µ–Ω–Ω–∏–∫–∞–º–∏\n\n"
        "–ö–æ–≥–¥–∞ –ø–æ–¥–ø–∏—à–µ—à—å—Å—è ‚Äî –∂–º–∏ –∫–Ω–æ–ø–∫—É –Ω–∏–∂–µ ‚¨áÔ∏è",
        reply_markup=InlineKeyboardMarkup(buttons)
    )

def check_subs(update: Update, context: CallbackContext):
    query = update.callback_query
    user_id = query.from_user.id
    bot = context.bot

    # –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–æ–¥–ø–∏—Å–∫–∏
    try:
        channel_status = bot.get_chat_member(f"@{CHANNEL_USERNAME}", user_id).status
        group_status = bot.get_chat_member(f"@{GROUP_USERNAME}", user_id).status

        is_subscribed = channel_status not in ['left', 'kicked'] and group_status not in ['left', 'kicked']

        if is_subscribed:
            query.answer()
            query.edit_message_text(
                "–°–ø–∞—Å–∏–±–æ –∑–∞ –ø–æ–¥–ø–∏—Å–∫—É! üåø\n\n"
                "–¢–µ–ø–µ—Ä—å –º–æ–∂–Ω–æ –æ—Ç–∫—Ä—ã—Ç—å –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é:",
                reply_markup=InlineKeyboardMarkup([
                    [InlineKeyboardButton("üìÇ –û—Ç–∫—Ä—ã—Ç—å –º–µ–Ω—é", url="https://t.me/YogaWelcomebot")]
                ])
            )
        else:
            raise Exception("Not subscribed")

    except Exception:
        query.answer()
        query.edit_message_text(
            "–ü–æ—Ö–æ–∂–µ, —Ç—ã –µ—â—ë –Ω–µ –ø–æ–¥–ø–∏—Å–∞–ª—Å—è –Ω–∞ –∫–∞–Ω–∞–ª –∏ —á–∞—Ç üôà\n\n"
            "–ü–æ–¥–ø–∏—à–∏—Å—å –∏ –Ω–∞–∂–º–∏ –∫–Ω–æ–ø–∫—É –µ—â—ë —Ä–∞–∑ ‚¨áÔ∏è",
            reply_markup=InlineKeyboardMarkup([
                [InlineKeyboardButton("üì¢ –ü–æ–¥–ø–∏—Å–∞—Ç—å—Å—è –Ω–∞ –∫–∞–Ω–∞–ª", url=f"https://t.me/{CHANNEL_USERNAME}")],
                [InlineKeyboardButton("üí¨ –í—Å—Ç—É–ø–∏—Ç—å –≤ —á–∞—Ç", url=f"https://t.me/{GROUP_USERNAME}")],
                [InlineKeyboardButton("‚úÖ –Ø –ø–æ–¥–ø–∏—Å–∞–ª—Å—è", callback_data="check_subs")]
            ])
        )

def main():
    updater = Updater(TOKEN, use_context=True)
    dp = updater.dispatcher

    dp.add_handler(CommandHandler("start", start))
    dp.add_handler(CallbackQueryHandler(check_subs))

    print("–ü—Ä–∏–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω—ã–π –±–æ—Ç –∑–∞–ø—É—â–µ–Ω!")
    updater.start_polling()
    updater.idle()

if __name__ == "__main__":
    main()
